DROP TABLE "User";
CREATE TABLE IF NOT EXISTS "User" (
	Id UUID DEFAULT gen_random_uuid(),
	"Username" VARCHAR(30) UNIQUE NOT NULL,
	Fullname VARCHAR(100) NOT NULL,
	Birthdate DATE NOT NULL,
	Email VARCHAR(100) NOT NULL,
	Phone VARCHAR(10),
	CONSTRAINT User_PK_Id PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS Trade (
	Id UUID DEFAULT gen_random_uuid(),
	Stock VARCHAR(20) NOT NULL,
	Entryprice decimal NOT NULL,
	Exitprice decimal NOT NULL,
	Entrydatetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	Exitdatetime TIMESTAMP ,
	CONSTRAINT Trade_PK_Id PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS Post (
	Id UUID DEFAULT gen_random_uuid(),
	Title VARCHAR(50) NOT NULL,
	Description VARCHAR(10000) NOT NULL,
	CONSTRAINT Post_PK_Id PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS AdminSettings (
	UserId UUID NOT NULL,
	CanPost BOOL DEFAULT FALSE,
	CanTrade BOOL DEFAULT FALSE,
	CONSTRAINT FK_UserId FOREIGN KEY (UserId) REFERENCES "User"(Id)
);

CREATE TABLE IF NOT EXISTS UserSettings (
	UserId UUID NOT NULL,
	IsTradesPublic BOOL DEFAULT FALSE,
	CONSTRAINT FK_UserId FOREIGN KEY (UserId) REFERENCES "User"(Id)
);

CREATE TABLE IF NOT EXISTS Trades (
	TradeId UUID NOT NULL,
	UserId UUID NOT NULL,
	CONSTRAINT FK_TradeId FOREIGN KEY (TradeId) REFERENCES Trade(Id),
	CONSTRAINT FK_UserId FOREIGN KEY (UserId) REFERENCES "User"(Id)
);

CREATE TABLE IF NOT EXISTS Posts (
	PostId UUID NOT NULL,
	UserId UUID NOT NULL,
	CONSTRAINT FK_PostId FOREIGN KEY (PostId) REFERENCES Post(Id),
	CONSTRAINT FK_UserId FOREIGN KEY (UserId) REFERENCES "User"(Id)
);

CREATE TABLE IF NOT EXISTS TradeLikes (
	TradeId UUID NOT NULL,
	UserId UUID NOT NULL,
	Liked BOOL DEFAULT FALSE,
	CONSTRAINT FK_TradeId FOREIGN KEY (TradeId) REFERENCES Trade(Id),
	CONSTRAINT FK_UserId FOREIGN KEY (UserId) REFERENCES "User"(Id)
);

CREATE TABLE IF NOT EXISTS PostLikes (
	PostId UUID NOT NULL,
	UserId UUID NOT NULL,
	Liked BOOL DEFAULT FALSE,
	CONSTRAINT FK_PostId FOREIGN KEY (PostId) REFERENCES Post(Id),
	CONSTRAINT FK_UserId FOREIGN KEY (UserId) REFERENCES "User"(Id)
);